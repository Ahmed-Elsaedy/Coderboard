// <auto-generated/>
#pragma warning disable CS0618
using Coderboard.Web.HttpClients.Identity.ConfirmEmail;
using Coderboard.Web.HttpClients.Identity.ForgotPassword;
using Coderboard.Web.HttpClients.Identity.Login;
using Coderboard.Web.HttpClients.Identity.Manage;
using Coderboard.Web.HttpClients.Identity.Refresh;
using Coderboard.Web.HttpClients.Identity.Register;
using Coderboard.Web.HttpClients.Identity.ResendConfirmationEmail;
using Coderboard.Web.HttpClients.Identity.ResetPassword;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Coderboard.Web.HttpClients.Identity
{
    /// <summary>
    /// Builds and executes requests for operations under \identity
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class IdentityRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The confirmEmail property</summary>
        public global::Coderboard.Web.HttpClients.Identity.ConfirmEmail.ConfirmEmailRequestBuilder ConfirmEmail
        {
            get => new global::Coderboard.Web.HttpClients.Identity.ConfirmEmail.ConfirmEmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The forgotPassword property</summary>
        public global::Coderboard.Web.HttpClients.Identity.ForgotPassword.ForgotPasswordRequestBuilder ForgotPassword
        {
            get => new global::Coderboard.Web.HttpClients.Identity.ForgotPassword.ForgotPasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The login property</summary>
        public global::Coderboard.Web.HttpClients.Identity.Login.LoginRequestBuilder Login
        {
            get => new global::Coderboard.Web.HttpClients.Identity.Login.LoginRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The manage property</summary>
        public global::Coderboard.Web.HttpClients.Identity.Manage.ManageRequestBuilder Manage
        {
            get => new global::Coderboard.Web.HttpClients.Identity.Manage.ManageRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The refresh property</summary>
        public global::Coderboard.Web.HttpClients.Identity.Refresh.RefreshRequestBuilder Refresh
        {
            get => new global::Coderboard.Web.HttpClients.Identity.Refresh.RefreshRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The register property</summary>
        public global::Coderboard.Web.HttpClients.Identity.Register.RegisterRequestBuilder Register
        {
            get => new global::Coderboard.Web.HttpClients.Identity.Register.RegisterRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The resendConfirmationEmail property</summary>
        public global::Coderboard.Web.HttpClients.Identity.ResendConfirmationEmail.ResendConfirmationEmailRequestBuilder ResendConfirmationEmail
        {
            get => new global::Coderboard.Web.HttpClients.Identity.ResendConfirmationEmail.ResendConfirmationEmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The resetPassword property</summary>
        public global::Coderboard.Web.HttpClients.Identity.ResetPassword.ResetPasswordRequestBuilder ResetPassword
        {
            get => new global::Coderboard.Web.HttpClients.Identity.ResetPassword.ResetPasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Coderboard.Web.HttpClients.Identity.IdentityRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public IdentityRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/identity", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Coderboard.Web.HttpClients.Identity.IdentityRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public IdentityRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/identity", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
